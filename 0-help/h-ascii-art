#!/bin/bash
command -v mdcat &>/dev/null || "${0%/*}/mdcat-get.sh"; hash -r
command -v mdcat &>/dev/null || { echo "Error: mdcat required but not available." >&2; exit 1; }
WIDTH=$(if [ $(tput cols) -ge 105 ]; then echo 100; else echo $(( $(tput cols) - 5 )); fi)
mdcat --columns="$WIDTH" <(cat <<'EOF'

# Convert Images to ASCII Art

Several tools and methods are available for converting images into ASCII art. Below is an overview of these tools and techniques, categorized and described in detail.

## **Command-Line Tools**

### 1. `jp2a`
- A lightweight command-line tool for converting images into ASCII art.
- Supports customization like width, contrast, and color.

#### Installation
```bash
sudo apt install jp2a
jp2a --width=80 image.jpg
```
### 2. img2txt (from caca-utils)
Part of the caca-utils package, which uses the libcaca library for ASCII rendering.
Can produce colored or grayscale ASCII art.
```bash
sudo apt install caca-utils
img2txt image.png
```

### 3. aa-lib
A library used to create ASCII animations and static art.
Frequently integrated into fun utilities like ASCII Quake or ASCII video players.
Installation
```bash
sudo apt install aalib-bin
Example Tool: aafire
Run aafire to see a real-time ASCII art flame animation:
aafire
```

### 4. Python Script
Python's Pillow library makes it easy to create a custom script to generate ASCII art.

Dependencies
Install the required library:
```bash
pip install pillow
```
Example Script
```python
from PIL import Image

def image_to_ascii(image_path, width=100):
    # ASCII characters by brightness (dark to light)
    chars = " .:-=+*#%@"
    # Open and resize image
    img = Image.open(image_path)
    aspect_ratio = img.height / img.width
    new_height = int(width * aspect_ratio * 0.55)
    img = img.resize((width, new_height))
    # Convert to grayscale
    img = img.convert("L")

    ascii_art = ""
    for y in range(img.height):
        for x in range(img.width):
            pixel = img.getpixel((x, y))
            ascii_art += chars[pixel // 25]
        ascii_art += "\n"

    return ascii_art
```

# Generate ASCII art from an image
print(image_to_ascii("image.jpg", width=80))
Save this script as ascii_converter.py and run it:
```bash
python ascii_converter.py

# Online Tools
If you prefer not to install software, these websites allow you to upload images and generate ASCII art directly:

ASCII Flow
ASCII Art Generator
Comparison of Tools
Tool/Method	Features	Ease of Use	Customization
jp2a	Grayscale, width adjustment	Easy	High
img2txt	Colored ASCII support	Easy	Medium
Python Script	Fully customizable	Moderate	Very High
Online Tools	Instant, no installation needed	Very Easy	Low

EOF
) | less -R
