#!/bin/bash
command -v mdcat &>/dev/null || "${0%/*}/mdcat-get.sh"; hash -r
command -v mdcat &>/dev/null || { echo "Error: mdcat required but not available." >&2; exit 1; }
WIDTH=$(if [ $(tput cols) -ge 105 ]; then echo 100; else echo $(( $(tput cols) - 5 )); fi)
mdcat --columns="$WIDTH" <(cat <<'EOF'

# Finding and Managing Duplicate Files

## Basics of Duplicates
Duplicate files are multiple files with the same content, but often with different names or locations. Identifying and managing them helps free up storage space.

## Tools to Find Duplicates

### 1. **fdupes** - The Fastest Duplicate Finder
- Install `fdupes`:
    ```bash
    sudo apt install fdupes    # Debian/Ubuntu
    sudo yum install fdupes    # RHEL/CentOS
    sudo pacman -S fdupes      # Arch Linux
    ```
- Use it to find duplicates:
    ```bash
    fdupes -r ~/target-folder   # Recursively search for duplicates in a folder
    ```
    - `-r` → Recursively searches subdirectories
    - To delete duplicates interactively:
    ```bash
    fdupes -d -r ~/target-folder
    ```

### 2. **Using `find` + `md5sum` for Duplicates**
Find duplicate files by comparing their hashes:
```bash
find ~/target-folder -type f -exec md5sum {} + | sort | awk '
{
    if ($1 in seen) {
        print seen[$1], "==", $2  # Identical files with different names
    } else {
        seen[$1] = $2
    }
}'
This generates MD5 hashes for files and compares them. Identical files will have the same hash.

### 3. Using diff for Direct Comparison
To compare two specific files for duplicates:

diff file1.txt file2.txt
If there's no output, the files are identical.

### 4. Using rsync to Find Duplicates
rsync can be used to compare directories and find duplicates:

```bash
rsync -avcn --ignore-existing ~/dir1/ ~/dir2/
-a → Archive mode (preserves permissions, timestamps, etc.)
-v → Verbose output
-c → Compare based on checksum
```

### 5. Advanced Duplicate Handling
1. Finding Duplicates Based on Size First
Sometimes, finding files of identical size can help speed up the duplicate search:

`find ~/target-folder -type f -exec du -b {} + | sort -n`
This will list files by size, making it easier to identify potential duplicates.

2. Using rdfind for Duplicate Detection
rdfind is another tool specifically for finding and removing duplicate files:

`sudo apt install rdfind`
`rdfind -deleteduplicates true ~/target-folder`

3. Removing Duplicates with find + rm
If you want to remove duplicate files manually after identifying them:

```bash
find ~/target-folder -type f -exec md5sum {} + | sort | awk '
{
    if ($1 in seen) {
        print "Removing duplicate file:", $2
        rm $2  # Remove duplicate files
    } else {
        seen[$1] = $2
    }
}'
```

4. Using fdupes with xargs for Bulk Deletion
`fdupes -r ~/target-folder | xargs -n 1 rm`   This will delete all duplicate files in a folder.

### Tips and Best Practices
Back up files before deleting, especially with fdupes or bulk removal.
Check file sizes first before comparing hashes to speed up the process.
Use -i option with fdupes for a safer, interactive cleanup.
Exclude certain directories from being checked with the -x option in fdupes:
`fdupes -r -x ~/target-folder`

Additional Tools for Duplicate Management
1. dupeGuru - A GUI for Duplicate File Finding
For those who prefer a graphical interface, dupeGuru is a great option:

`sudo apt install dupeguru`
Allows you to scan for duplicates using content matching, file names, or fuzzy matching.

2. AllDup (Windows) - Another GUI Tool
For Windows users, AllDup is a useful tool for finding and removing duplicates: AllDup Website

Examples:

Find Duplicates Based on MD5 Hash

```bash
find ~/Documents -type f -exec md5sum {} + | sort | awk '
{
    if ($1 in seen) {
        print seen[$1], "==", $2  # Identical files
    } else {
        seen[$1] = $2
    }
}'
```

Find Duplicates in a Specific Directory
`fdupes -r ~/my-folder`
Removing Duplicates After Confirmation
`fdupes -d -r ~/my-folder`
Choose which duplicates to delete interactively.
Displaying Duplicate Files with Their Sizes
`find ~/Documents -type f -exec du -b {} + | sort -n`

EOF
) | less -R
