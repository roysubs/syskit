#!/bin/bash
command -v mdcat &>/dev/null || "${0%/*}/mdcat-get.sh"; hash -r
command -v mdcat &>/dev/null || { echo "Error: mdcat required but not available." >&2; exit 1; }
WIDTH=$(if [ $(tput cols) -ge 105 ]; then echo 100; else echo $(( $(tput cols) - 5 )); fi)
mdcat --columns="$WIDTH" <(cat <<'EOF'

# FFmpeg Command Cheatsheet

FFmpeg is a powerful multimedia processing tool used for audio and video conversion, editing, streaming, and more. This cheatsheet covers a wide range of FFmpeg usage examples and techniques for handling common tasks.

## General Commands

### Basic Syntax:
`ffmpeg -i inputfile -options outputfile`
Where inputfile is the source file, -options are any desired settings, and outputfile is the result.

### Video and Audio Conversion

Convert MP4 to AVI:
`ffmpeg -i input.mp4 output.avi`

Convert Audio Format (e.g., WAV to MP3):
`ffmpeg -i input.wav output.mp3`

Extract Audio from Video:
`ffmpeg -i input.mp4 -vn -acodec copy output.aac`
-vn → Disable video
-acodec copy → Copy the audio without re-encoding

Video Editing
Trim a Video:
ffmpeg -i input.mp4 -ss 00:01:30 -to 00:03:00 -c copy output.mp4
-ss → Start time
-to → End time
This command trims the video from 1:30 to 3:00 without re-encoding.

Combine Multiple Videos:
`ffmpeg -f concat -safe 0 -i filelist.txt -c copy output.mp4`
filelist.txt should contain a list of video file paths:
`file '/path/to/file1.mp4'`
`file '/path/to/file2.mp4'`

Subtitles
Add an SRT Subtitle File to an MP4 without Recompressing:
`ffmpeg -i input_video.mp4 -i subtitles.srt -c copy -c:s mov_text output_video.mp4`
-c:s mov_text → Use the mov_text codec for subtitles
Extract Subtitles from a Video:
`ffmpeg -i input_video.mkv -map 0:s:0 output_subtitles.srt`
-map 0:s:0 → Select the first subtitle stream (use 0:s:1 for the second, etc.)

### Video Filters and Effects

Apply Grayscale Filter to Video:
`ffmpeg -i input.mp4 -vf "hue=s=0" output.mp4`

Add a Watermark to a Video:
`ffmpeg -i input.mp4 -i watermark.png -filter_complex "overlay=10:10" output.mp4`
overlay=10:10 → Place watermark at position (10, 10)

### Resize and Scale Videos

Resize Video to 1280x720:
`ffmpeg -i input.mp4 -vf "scale=1280:720" output.mp4`

Resize Video to Fit Within a Specific Width (maintaining aspect ratio):
`ffmpeg -i input.mp4 -vf "scale=1280:-1" output.mp4`
-1 keeps the aspect ratio.

### Audio Processing

Change Audio Bitrate:
`ffmpeg -i input.mp3 -b:a 192k output.mp3`
Increase Audio Volume by 1.5x:
`ffmpeg -i input.mp4 -filter:a "volume=1.5" output.mp4`

### Merging Audio and Video

Merge an MP3 Audio File with a Video (no re-encoding):
`ffmpeg -i input_video.mp4 -i input_audio.mp3 -c:v copy -c:a aac -strict experimental output.mp4`

Synchronize Audio to Video (with Offset):
`ffmpeg -i input_video.mp4 -itsoffset 00:00:01 -i input_audio.mp3 -c:v copy -c:a aac -strict experimental output.mp4`
-itsoffset 00:00:01 → Adds a 1-second offset to the audio.

### Speed Adjustment

Speed Up Video by 2x:
`ffmpeg -i input.mp4 -filter:v "setpts=0.5*PTS" -filter:a "atempo=2.0" output.mp4`
setpts=0.5*PTS → Speeds up the video by 2x
atempo=2.0 → Adjusts the audio speed accordingly

Slow Down Video by 0.5x:
`ffmpeg -i input.mp4 -filter:v "setpts=2.0*PTS" -filter:a "atempo=0.5" output.mp4`

Video Encoding Options
Use H.264 Encoding for Video (MP4):
`ffmpeg -i input.avi -c:v libx264 -crf 23 output.mp4`
-crf 23 → Quality level (lower is better, 23 is default)

Use H.265 (HEVC) for Video Encoding:
`ffmpeg -i input.mp4 -c:v libx265 output.mp4`
H.265 is more efficient but less widely supported than H.264.

### Extract Frames from Video

Extract One Frame at a Specific Time:
`ffmpeg -i input.mp4 -ss 00:00:05 -vframes 1 output.png`
-ss 00:00:05 → Extract frame at 5 seconds
-vframes 1 → Extract a single frame

Extract Multiple Frames at Regular Intervals:
`ffmpeg -i input.mp4 -vf fps=1 output%04d.png`
fps=1 → Extract one frame per second

### Troubleshooting

Check Video Information:
`ffmpeg -i input.mp4`
This shows the format, codec, resolution, bitrate, and other details of the video.

Get the Duration of a Video:
`ffmpeg -i input.mp4 2>&1 | grep "Duration"`

### Other Useful FFmpeg Commands

Convert Video to WebM Format:
`ffmpeg -i input.mp4 -c:v libvpx -c:a libvorbis output.webm`

Extract Audio from Video as MP3:
`ffmpeg -i input.mp4 -vn -ar 44100 -ac 2 -ab 192k -f mp3 output.mp3`

Convert a GIF to a Video:
`ffmpeg -i input.gif output.mp4`

Concatenate Videos with Different Codecs:
`ffmpeg -f concat -i mylist.txt -c:v libx264 -c:a aac output.mp4`

To add a srt file to an mp4 without recompressing:
`ffmpeg -i input_video.mp4 -i subtitles.srt -c copy -c:s mov_text output_video.mp4`

EOF
) | less -R
