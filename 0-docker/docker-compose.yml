services:
  # ───[ PostgreSQL Database ]─────────────────────────────────────
  postgres:
    image: postgres:16-alpine
    container_name: nextcloud-postgres
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nextcloud-internal

  # ───[ Redis Cache ]─────────────────────────────────────────────
  redis:
    image: redis:7-alpine
    container_name: nextcloud-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - nextcloud-internal

  # ───[ Nextcloud Application ]───────────────────────────────────
  nextcloud:
    image: nextcloud:29-apache
    container_name: nextcloud
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${NEXTCLOUD_PORT}:80"
    volumes:
      - ${CONFIG_DIR}/nextcloud:/var/www/html
      - ${DATA_DIR}:/var/www/html/data
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_HOST_PASSWORD=${REDIS_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${DOMAIN} localhost
      - OVERWRITEPROTOCOL=https
      - OVERWRITEHOST=${DOMAIN}
      - OVERWRITECLIURL=https://${DOMAIN}
      - TZ=${TZ}
    networks:
      - nextcloud-internal
      - caddy-network

  # ───[ Caddy Reverse Proxy ]─────────────────────────────────────
  caddy:
    image: caddy:2-alpine
    container_name: caddy
    restart: unless-stopped
    depends_on:
      - nextcloud
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ${CONFIG_DIR}/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ${CONFIG_DIR}/caddy/data:/data
      - ${CONFIG_DIR}/caddy/config:/config
    environment:
      - DOMAIN=${DOMAIN}
      - DUCKDNS_TOKEN=${DUCKDNS_TOKEN}
    networks:
      - caddy-network

  # ───[ DuckDNS Updater (Optional) ]──────────────────────────────
  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns-updater
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - SUBDOMAINS=${DUCKDNS_SUBDOMAIN}
      - TOKEN=${DUCKDNS_TOKEN}
      - LOG_FILE=false
    profiles:
      - duckdns
    networks:
      - caddy-network

networks:
  nextcloud-internal:
    driver: bridge
  caddy-network:
    driver: bridge
